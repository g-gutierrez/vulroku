{"ast":null,"code":"var _jsxFileName = \"/Users/grg/dev/repos/Vulcan/client/src/Components/Login/index.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport LoginButton from \"../LoginButton\";\nimport LogoutButton from \"../LogoutButton\"; // import { Redirect } from \"react-router-dom\"\n// import AuthContext from \"../../Utils/AuthContext\"\n\nimport { GoogleLogin } from 'react-google-login'; // refresh token\n\nimport { refreshTokenSetup } from '../../Utils/refreshToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '827360591703-tgm50hh32gmsb3af5l2fi5kl8bd0v1j0.apps.googleusercontent.com';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuccess = res => {\n      console.log('Login Success: currentUser:', res.profileObj);\n      const {\n        email\n      } = this.state;\n      const formData = {\n        \"email\": res.profileObj.email\n      };\n      console.log(formData);\n      axios.post(\"/api/gusers\", formData).then(res => {\n        console.log(\"*****google-login-test!******\", res.data);\n        localStorage.setItem('user', res.data[0].id);\n        this.props.setAuth(true);\n      });\n      refreshTokenSetup(res);\n    };\n\n    this.onFailure = res => {\n      console.log('Login failed: res:', res);\n      alert(`Failed to login.`);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this); //this.state = {isLoggedIn: false}\n  }\n\n  handleInputChange(event) {\n    const formType = event.target.id;\n    this.setState({\n      [formType]: event.target.value\n    });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const formData = {\n      \"email\": email,\n      \"password\": password\n    };\n    console.log(\"****\", this.props); // this.setState({isLoggedIn: true})\n    // let isLoggedIn = this.context.isLoggedIn\n\n    axios.post(\"/api/login\", formData).then(res => {\n      console.log(\"*****LOGGED IN!******\", res);\n\n      if (res.data) {\n        // this.setState({\n        //   success: true,\n        //   // isLoggedIn: true,\n        // });\n        console.log(res.data);\n        this.props.setAuth(true);\n        this.props.setUser(res.data.id);\n        localStorage.setItem('user', res.data.id);\n      }\n    });\n  }\n\n  renderSuccessMessage() {\n    let result = null;\n\n    if (this.state.success) {\n      this.context.update({\n        isLoggedIn: true\n      });\n    }\n\n    return result;\n  }\n\n  disableForm() {\n    let result = false;\n\n    if (this.state.success) {\n      result = true;\n    }\n\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"form-fields container\",\n          disabled: this.disableForm(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Enter email\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Enter email\",\n              id: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-block\",\n            value: \"Submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), this.renderSuccessMessage(), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot-password text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/sign-up\",\n              children: \"New? Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/sign-up\",\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: clientId,\n              buttonText: \"Login with Google\",\n              onSuccess: this.onSuccess,\n              onFailure: this.onFailure,\n              cookiePolicy: 'single_host_origin',\n              style: {\n                marginTop: '100px'\n              },\n              isSignedIn: true // uxMode=\"redirect\"\n              // redirectURI=\"http://localhost:3000\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n} //Login.contextType = AuthContext\n\n\nexport default Login;","map":{"version":3,"sources":["/Users/grg/dev/repos/Vulcan/client/src/Components/Login/index.js"],"names":["React","Component","axios","LoginButton","LogoutButton","GoogleLogin","refreshTokenSetup","clientId","Login","constructor","props","onSuccess","res","console","log","profileObj","email","state","formData","post","then","data","localStorage","setItem","id","setAuth","onFailure","alert","password","handleInputChange","bind","handleFormSubmit","event","formType","target","setState","value","preventDefault","setUser","renderSuccessMessage","result","success","context","update","isLoggedIn","disableForm","render","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\"\nimport LoginButton from \"../LoginButton\"\nimport LogoutButton from \"../LogoutButton\"\n// import { Redirect } from \"react-router-dom\"\n// import AuthContext from \"../../Utils/AuthContext\"\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../../Utils/refreshToken';\n\nconst clientId =\n  '827360591703-tgm50hh32gmsb3af5l2fi5kl8bd0v1j0.apps.googleusercontent.com';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    //this.state = {isLoggedIn: false}\n  }\n\n  handleInputChange(event) {\n    const formType = event.target.id;\n    this.setState({\n      [formType]: event.target.value,\n    });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const {\n      email,\n      password,\n\n    } = this.state;\n    const formData = {\n      \"email\": email,\n      \"password\": password,\n    };\n\n    console.log(\"****\",this.props);\n    // this.setState({isLoggedIn: true})\n\n    // let isLoggedIn = this.context.isLoggedIn\n\n    axios.post(\"/api/login\", formData).then((res) => {\n      console.log(\"*****LOGGED IN!******\",res);\n      if (res.data) {\n        // this.setState({\n        //   success: true,\n        //   // isLoggedIn: true,\n        // });\n        console.log(res.data);\n        this.props.setAuth(true);\n        this.props.setUser(res.data.id);\n        localStorage.setItem('user',res.data.id);\n      } \n    });\n  }\n  \n  renderSuccessMessage() {\n    let result = null;\n    if (this.state.success) {\n      this.context.update({ isLoggedIn: true})\n    }\n\n    return result;\n  }\n\n  disableForm() {\n    let result = false;\n    if (this.state.success) {\n      result = true;\n    }\n    return result;\n  }\n\n\n  onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n      const {\n        email,\n      } = this.state;\n      const formData = {\n        \"email\": res.profileObj.email,\n      };\n     console.log(formData)\n    \n    axios.post(\"/api/gusers\", formData).then((res) => {\n      console.log(\"*****google-login-test!******\",res.data);\n      localStorage.setItem('user',res.data[0].id);\n      this.props.setAuth(true);\n      \n    });\n \n\n\n    \n    \n    refreshTokenSetup(res);\n\n  };\n\n  onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login.`\n    );\n  };\n \n    render() {\n      return (\n      <div className=\"container-sm\">\n      <form onSubmit={this.handleFormSubmit}>\n          <fieldset\n            className=\"form-fields container\"\n            disabled={this.disableForm()}>\n            <div className=\"form-group\">\n              <label>Email</label>\n                <input \n                type=\"email\" \n                className=\"form-control\" \n                placeholder=\"Enter email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={this.handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n                <input \n                type=\"password\" \n                className=\"form-control\" \n                placeholder=\"Enter email\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleInputChange} />\n            </div>\n              <button type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Submit\">Sign In</button>\n              {this.renderSuccessMessage()}\n              <p className=\"forgot-password text-right\">\n              <a href=\"/sign-up\">New? Create an account</a>\n              <br></br>\n              <a href=\"/sign-up\">Forgot password</a>\n              </p>\n      <p>OR</p>\n      <div>\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Login with Google\"\n          onSuccess={this.onSuccess}\n          onFailure={this.onFailure}\n          cookiePolicy={'single_host_origin'}\n          style={{ marginTop: '100px' }}\n          isSignedIn={true}\n          \n          // uxMode=\"redirect\"\n          // redirectURI=\"http://localhost:3000\"\n        />\n      </div>\n      </fieldset>\n      </form>\n      </div>\n    );\n  } \n}\n\n//Login.contextType = AuthContext\n\nexport default Login"]},"metadata":{},"sourceType":"module"}